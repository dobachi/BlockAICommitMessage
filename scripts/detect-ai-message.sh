#!/bin/bash

# AI生成メッセージ検出ツール
# 高度なパターンマッチングとヒューリスティック分析を使用

# カラー出力用の定義
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 検出結果を格納する変数
AI_DETECTED=0
DETECTION_REASONS=()

# 設定ファイルの読み込み
CONFIG_FILE=""
if [ -f "$HOME/.blockaicommit/config/ai-detection.conf" ]; then
    CONFIG_FILE="$HOME/.blockaicommit/config/ai-detection.conf"
elif [ -f "$(dirname "$0")/../config/ai-detection.conf" ]; then
    CONFIG_FILE="$(dirname "$0")/../config/ai-detection.conf"
fi

if [ -n "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
fi

# デフォルト値の設定
DETECTION_LEVEL=${detection_level:-low}
ALLOW_EMOJI=${allow_emoji:-false}
CHECK_GRAMMAR=${check_grammar:-true}
CHECK_VOCABULARY=${check_vocabulary:-true}

# 引数チェック
if [ $# -eq 0 ]; then
    echo "使用方法: $0 \"コミットメッセージ\""
    echo "または: $0 -f <ファイルパス>"
    exit 1
fi

# メッセージの取得
if [ "$1" = "-f" ]; then
    if [ ! -f "$2" ]; then
        echo -e "${RED}エラー: ファイルが見つかりません: $2${NC}"
        exit 1
    fi
    MESSAGE=$(cat "$2")
else
    MESSAGE="$1"
fi

# 1. 明示的なAIサイン検出
declare -a AI_SIGNATURES=(
    "🤖"
    "🤖 Generated with"
    "Co-Authored-By: Claude"
    "Co-Authored-By: GPT"
    "Co-Authored-By: Gemini"
    "Co-Authored-By: Copilot"
    "Generated by AI"
    "AI-generated"
    "Auto-generated by"
    "Automatically generated"
    "[AI]"
    "[Bot]"
    "noreply@anthropic.com"
    "noreply@openai.com"
)

for sig in "${AI_SIGNATURES[@]}"; do
    if echo "$MESSAGE" | grep -qi "$sig"; then
        AI_DETECTED=1
        DETECTION_REASONS+=("明示的なAIサイン: '$sig'")
    fi
done

# 2. 典型的なAIコミットメッセージパターン検出（mediumレベル以上）
if [ "$DETECTION_LEVEL" = "medium" ] || [ "$DETECTION_LEVEL" = "high" ]; then
    declare -a AI_PATTERNS=(
        "This commit .* the following"
        "This change .* to"
        "Updates? .* to .* for better"
        "Refactors? .* to improve"
        "Implements? .* functionality"
        "Adds? .* support for"
        "^- .* \n- .* \n- .*"  # 箇条書きリスト形式（3項目以上）
    )
    
    # Conventional Commitsは、highレベルでのみ「過度に整形」をチェック
    if [ "$DETECTION_LEVEL" = "high" ]; then
        AI_PATTERNS+=("^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: [A-Z].*\. [A-Z].*")  # 複数文の場合のみ
    fi

    for pattern in "${AI_PATTERNS[@]}"; do
        if echo "$MESSAGE" | grep -Pq "$pattern" 2>/dev/null || echo "$MESSAGE" | grep -Eq "$pattern"; then
            AI_DETECTED=1
            DETECTION_REASONS+=("AIパターンマッチ: '$pattern'")
        fi
    done
fi

# 3. 文体分析（mediumレベル以上かつcheck_vocabularyが有効）
if [ "$CHECK_VOCABULARY" = "true" ] && ([ "$DETECTION_LEVEL" = "medium" ] || [ "$DETECTION_LEVEL" = "high" ]); then
    # 過度に形式的または説明的な文体
    if echo "$MESSAGE" | grep -Eq "(enhance|optimize|streamline|implement|incorporate|facilitate|utilize)" ; then
        FORMAL_WORD_COUNT=$(echo "$MESSAGE" | grep -o -E "(enhance|optimize|streamline|implement|incorporate|facilitate|utilize)" | wc -l)
        # mediumでは3個以上、highでは2個以上で検出
        local threshold=3
        [ "$DETECTION_LEVEL" = "high" ] && threshold=2
        
        if [ $FORMAL_WORD_COUNT -ge $threshold ]; then
            AI_DETECTED=1
            DETECTION_REASONS+=("過度に形式的な語彙使用 (${FORMAL_WORD_COUNT}個)")
        fi
    fi
fi

# 4. 構造分析（highレベルのみかつcheck_grammarが有効）
if [ "$CHECK_GRAMMAR" = "true" ] && [ "$DETECTION_LEVEL" = "high" ]; then
    # 完璧な文法と句読点
    SENTENCE_COUNT=$(echo "$MESSAGE" | grep -o '[.!?]' | wc -l)
    WORD_COUNT=$(echo "$MESSAGE" | wc -w)
    if [ $WORD_COUNT -gt 30 ] && [ $SENTENCE_COUNT -gt 2 ]; then
        # 長いメッセージで完璧な文構造
        if echo "$MESSAGE" | grep -Eq "^[A-Z].*[.!?]$" && ! echo "$MESSAGE" | grep -q "[.!?][^[:space:]]"; then
            AI_DETECTED=1
            DETECTION_REASONS+=("完璧な文法構造 (${SENTENCE_COUNT}文, ${WORD_COUNT}語)")
        fi
    fi
fi

# 5. メタデータチェック（mediumレベル以上）
if [ "$DETECTION_LEVEL" = "medium" ] || [ "$DETECTION_LEVEL" = "high" ]; then
    # 複数の変更を詳細に列挙
    if echo "$MESSAGE" | grep -cE "^[-*] " > /dev/null; then
        LIST_ITEMS=$(echo "$MESSAGE" | grep -cE "^[-*] ")
        # mediumでは5項目以上、highでは3項目以上で検出
        local threshold=5
        [ "$DETECTION_LEVEL" = "high" ] && threshold=3
        
        if [ $LIST_ITEMS -ge $threshold ]; then
            AI_DETECTED=1
            DETECTION_REASONS+=("詳細な箇条書き形式 (${LIST_ITEMS}項目)")
        fi
    fi
fi

# 結果出力
echo -e "\n${YELLOW}=== AIメッセージ検出結果 ===${NC}\n"

if [ $AI_DETECTED -eq 1 ]; then
    echo -e "${RED}⚠️  AIによる生成が疑われます${NC}\n"
    echo -e "${YELLOW}検出理由:${NC}"
    for reason in "${DETECTION_REASONS[@]}"; do
        echo -e "  ${RED}•${NC} $reason"
    done
    echo ""
    echo -e "${YELLOW}推奨事項:${NC}"
    echo "  • 人間らしい自然なメッセージに書き直してください"
    echo "  • 簡潔で具体的な変更内容を記載してください"
    echo "  • AIツールの署名を削除してください"
    exit 1
else
    echo -e "${GREEN}✅ AIメッセージは検出されませんでした${NC}"
    echo -e "\n分析したメッセージ:"
    echo "$MESSAGE"
    exit 0
fi